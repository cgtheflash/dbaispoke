{
  "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
  "contentVersion": "1.0.0.0",
  "metadata": {
    "_generator": {
      "name": "bicep",
      "version": "0.31.92.45157",
      "templateHash": "5510817326841122108"
    }
  },
  "parameters": {
    "environment": {
      "type": "string",
      "defaultValue": "dev",
      "allowedValues": [
        "dev",
        "qa",
        "prod"
      ],
      "metadata": {
        "description": "Environment name (e.g., prod, dev, qa)"
      }
    },
    "appServiceSku": {
      "type": "string",
      "defaultValue": "P1",
      "allowedValues": [
        "F1",
        "D1",
        "B1",
        "B2",
        "B3",
        "S1",
        "S2",
        "S3",
        "P1",
        "P2",
        "P3",
        "P4"
      ],
      "metadata": {
        "description": "App Service SKU"
      }
    },
    "language": {
      "type": "string",
      "defaultValue": ".net",
      "allowedValues": [
        ".net",
        "php",
        "node",
        "html"
      ],
      "metadata": {
        "description": "The runtime stack of the app"
      }
    },
    "tags": {
      "type": "object",
      "defaultValue": {
        "Environment": "[parameters('environment')]",
        "Project": "DB Gameday",
        "DeployedBy": "Bicep"
      },
      "metadata": {
        "description": "Tags for all resources"
      }
    },
    "prefix": {
      "type": "string",
      "defaultValue": "dbgameday"
    },
    "vnetAddressPrefix": {
      "type": "string",
      "defaultValue": "10.123.4.0/23"
    },
    "appgwSubnetPrefix": {
      "type": "string",
      "defaultValue": "10.123.4.0/24"
    },
    "peSubnetPrefix": {
      "type": "string",
      "defaultValue": "10.123.5.0/24"
    },
    "integrationSubnetPrefix": {
      "type": "string",
      "defaultValue": "10.123.6.0/24"
    },
    "defaultRouteNextHopIp": {
      "type": "string"
    },
    "publicNetworkAccess": {
      "type": "string",
      "defaultValue": "Disabled",
      "allowedValues": [
        "Enabled",
        "Disabled"
      ],
      "metadata": {
        "description": "Enable public network access for PaaS services"
      }
    },
    "sqlAdminGroupObjectId": {
      "type": "string",
      "metadata": {
        "description": "Object ID of the Azure Entra group for SQL administrators"
      }
    },
    "sqlAdminGroupName": {
      "type": "string",
      "defaultValue": "Gameday SQL Administrators",
      "metadata": {
        "description": "Display name of the Azure Entra group for SQL administrators"
      }
    },
    "netFrameworkVersion": {
      "type": "string",
      "defaultValue": "v9.0",
      "allowedValues": [
        "v4.0",
        "v6.0",
        "v7.0",
        "v8.0",
        "v9.0"
      ],
      "metadata": {
        "description": "Runtime stack of the web app"
      }
    },
    "windowsDotnetVersion": {
      "type": "string",
      "defaultValue": "DOTNET|9.0-STS",
      "allowedValues": [
        "DOTNET|6.0",
        "DOTNET|7.0",
        "DOTNET|8.0",
        "DOTNET|9.0-STS"
      ],
      "metadata": {
        "description": "Windows .NET runtime version"
      }
    }
  },
  "variables": {
    "vnetName": "[format('{0}-vnet', parameters('prefix'))]",
    "subnets": [
      {
        "name": "appgw-subnet",
        "addressPrefix": "[parameters('appgwSubnetPrefix')]",
        "delegations": []
      },
      {
        "name": "pe-subnet",
        "addressPrefix": "[parameters('peSubnetPrefix')]",
        "delegations": []
      },
      {
        "name": "integration-subnet",
        "addressPrefix": "[parameters('integrationSubnetPrefix')]",
        "delegations": [
          {
            "name": "delegation",
            "properties": {
              "serviceName": "Microsoft.Web/serverFarms"
            }
          }
        ]
      }
    ],
    "asgNames": [
      "[format('{0}-appgw-asg', parameters('prefix'))]",
      "[format('{0}-app-asg', parameters('prefix'))]",
      "[format('{0}-storage-asg', parameters('prefix'))]"
    ]
  },
  "resources": [
    {
      "copy": {
        "name": "asgs",
        "count": "[length(variables('asgNames'))]"
      },
      "type": "Microsoft.Resources/deployments",
      "apiVersion": "2022-09-01",
      "name": "[format('asg-{0}', variables('asgNames')[copyIndex()])]",
      "properties": {
        "expressionEvaluationOptions": {
          "scope": "inner"
        },
        "mode": "Incremental",
        "parameters": {
          "name": {
            "value": "[variables('asgNames')[copyIndex()]]"
          },
          "location": {
            "value": "[resourceGroup().location]"
          }
        },
        "template": {
          "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
          "contentVersion": "1.0.0.0",
          "metadata": {
            "_generator": {
              "name": "bicep",
              "version": "0.31.92.45157",
              "templateHash": "7344892603350170353"
            }
          },
          "parameters": {
            "name": {
              "type": "string",
              "metadata": {
                "description": "Name of the Application Security Group"
              }
            },
            "location": {
              "type": "string",
              "metadata": {
                "description": "Location for resources"
              }
            }
          },
          "resources": [
            {
              "type": "Microsoft.Network/applicationSecurityGroups",
              "apiVersion": "2021-02-01",
              "name": "[parameters('name')]",
              "location": "[parameters('location')]"
            }
          ],
          "outputs": {
            "asgId": {
              "type": "string",
              "value": "[resourceId('Microsoft.Network/applicationSecurityGroups', parameters('name'))]"
            }
          }
        }
      }
    },
    {
      "type": "Microsoft.Resources/deployments",
      "apiVersion": "2022-09-01",
      "name": "nsg-deployment",
      "properties": {
        "expressionEvaluationOptions": {
          "scope": "inner"
        },
        "mode": "Incremental",
        "parameters": {
          "name": {
            "value": "[format('{0}-nsg', parameters('prefix'))]"
          },
          "location": {
            "value": "[resourceGroup().location]"
          },
          "tags": {
            "value": "[parameters('tags')]"
          },
          "rules": {
            "value": [
              {
                "name": "allow-gwm",
                "properties": {
                  "protocol": "*",
                  "sourcePortRange": "*",
                  "destinationPortRange": "65200-65535",
                  "sourceAddressPrefix": "GatewayManager",
                  "destinationAddressPrefix": "*",
                  "access": "Allow",
                  "priority": 100,
                  "direction": "Inbound"
                }
              },
              {
                "name": "allow-internet-to-appgw",
                "properties": {
                  "priority": 110,
                  "direction": "Inbound",
                  "access": "Allow",
                  "protocol": "Tcp",
                  "sourceAddressPrefix": "Internet",
                  "sourcePortRange": "*",
                  "destinationAddressPrefix": "[parameters('appgwSubnetPrefix')]",
                  "destinationPortRanges": [
                    "80",
                    "443"
                  ]
                }
              },
              {
                "name": "allow-appgw-to-app",
                "properties": {
                  "priority": 120,
                  "direction": "Inbound",
                  "access": "Allow",
                  "protocol": "Tcp",
                  "sourcePortRange": "*",
                  "sourceApplicationSecurityGroups": [
                    {
                      "id": "[reference(resourceId('Microsoft.Resources/deployments', format('asg-{0}', variables('asgNames')[0])), '2022-09-01').outputs.asgId.value]"
                    }
                  ],
                  "destinationApplicationSecurityGroups": [
                    {
                      "id": "[reference(resourceId('Microsoft.Resources/deployments', format('asg-{0}', variables('asgNames')[1])), '2022-09-01').outputs.asgId.value]"
                    }
                  ],
                  "destinationPortRange": "443"
                }
              },
              {
                "name": "allow-app-to-sql",
                "properties": {
                  "priority": 130,
                  "direction": "Inbound",
                  "access": "Allow",
                  "protocol": "Tcp",
                  "sourcePortRange": "*",
                  "sourceApplicationSecurityGroups": [
                    {
                      "id": "[reference(resourceId('Microsoft.Resources/deployments', format('asg-{0}', variables('asgNames')[1])), '2022-09-01').outputs.asgId.value]"
                    }
                  ],
                  "destinationPortRange": "1433",
                  "destinationAddressPrefix": "VirtualNetwork"
                }
              },
              {
                "name": "allow-vnet-to-storage",
                "properties": {
                  "priority": 140,
                  "direction": "Inbound",
                  "access": "Allow",
                  "protocol": "Tcp",
                  "sourceAddressPrefix": "VirtualNetwork",
                  "sourcePortRange": "*",
                  "destinationApplicationSecurityGroups": [
                    {
                      "id": "[reference(resourceId('Microsoft.Resources/deployments', format('asg-{0}', variables('asgNames')[2])), '2022-09-01').outputs.asgId.value]"
                    }
                  ],
                  "destinationPortRange": "443"
                }
              }
            ]
          }
        },
        "template": {
          "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
          "contentVersion": "1.0.0.0",
          "metadata": {
            "_generator": {
              "name": "bicep",
              "version": "0.31.92.45157",
              "templateHash": "7447482285701420154"
            }
          },
          "parameters": {
            "name": {
              "type": "string",
              "metadata": {
                "description": "Name of the Network Security Group"
              }
            },
            "location": {
              "type": "string",
              "metadata": {
                "description": "Location for resources"
              }
            },
            "rules": {
              "type": "array",
              "metadata": {
                "description": "Security rules for the NSG"
              }
            },
            "tags": {
              "type": "object",
              "defaultValue": {},
              "metadata": {
                "description": "Tags for the resources"
              }
            }
          },
          "resources": [
            {
              "type": "Microsoft.Network/networkSecurityGroups",
              "apiVersion": "2021-02-01",
              "name": "[parameters('name')]",
              "location": "[parameters('location')]",
              "tags": "[parameters('tags')]",
              "properties": {
                "securityRules": "[parameters('rules')]"
              }
            }
          ],
          "outputs": {
            "nsgId": {
              "type": "string",
              "value": "[resourceId('Microsoft.Network/networkSecurityGroups', parameters('name'))]"
            }
          }
        }
      },
      "dependsOn": [
        "asgs"
      ]
    },
    {
      "type": "Microsoft.Resources/deployments",
      "apiVersion": "2022-09-01",
      "name": "rt-deployment",
      "properties": {
        "expressionEvaluationOptions": {
          "scope": "inner"
        },
        "mode": "Incremental",
        "parameters": {
          "name": {
            "value": "[format('{0}-rt', parameters('prefix'))]"
          },
          "location": {
            "value": "[resourceGroup().location]"
          },
          "tags": {
            "value": "[parameters('tags')]"
          },
          "routes": {
            "value": [
              {
                "name": "default-route",
                "addressPrefix": "0.0.0.0/0",
                "nextHopType": "VirtualAppliance",
                "nextHopIpAddress": "[parameters('defaultRouteNextHopIp')]"
              }
            ]
          }
        },
        "template": {
          "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
          "contentVersion": "1.0.0.0",
          "metadata": {
            "_generator": {
              "name": "bicep",
              "version": "0.31.92.45157",
              "templateHash": "11994471314819824718"
            }
          },
          "parameters": {
            "name": {
              "type": "string",
              "metadata": {
                "description": "Name of the Route Table"
              }
            },
            "location": {
              "type": "string",
              "metadata": {
                "description": "Location for resources"
              }
            },
            "tags": {
              "type": "object",
              "defaultValue": {},
              "metadata": {
                "description": "Tags for the resources"
              }
            },
            "routes": {
              "type": "array",
              "metadata": {
                "description": "Routes configuration"
              }
            }
          },
          "resources": [
            {
              "type": "Microsoft.Network/routeTables",
              "apiVersion": "2020-06-01",
              "name": "[parameters('name')]",
              "location": "[parameters('location')]",
              "tags": "[parameters('tags')]",
              "properties": {
                "copy": [
                  {
                    "name": "routes",
                    "count": "[length(parameters('routes'))]",
                    "input": {
                      "name": "[parameters('routes')[copyIndex('routes')].name]",
                      "properties": {
                        "addressPrefix": "[parameters('routes')[copyIndex('routes')].addressPrefix]",
                        "nextHopType": "[parameters('routes')[copyIndex('routes')].nextHopType]",
                        "nextHopIpAddress": "[parameters('routes')[copyIndex('routes')].nextHopIpAddress]"
                      }
                    }
                  }
                ]
              }
            }
          ],
          "outputs": {
            "routeTableId": {
              "type": "string",
              "value": "[resourceId('Microsoft.Network/routeTables', parameters('name'))]"
            }
          }
        }
      }
    },
    {
      "type": "Microsoft.Resources/deployments",
      "apiVersion": "2022-09-01",
      "name": "vnet-deployment",
      "properties": {
        "expressionEvaluationOptions": {
          "scope": "inner"
        },
        "mode": "Incremental",
        "parameters": {
          "name": {
            "value": "[variables('vnetName')]"
          },
          "location": {
            "value": "[resourceGroup().location]"
          },
          "tags": {
            "value": "[parameters('tags')]"
          },
          "addressPrefix": {
            "value": "[parameters('vnetAddressPrefix')]"
          },
          "subnets": {
            "copy": [
              {
                "name": "value",
                "count": "[length(variables('subnets'))]",
                "input": "[createObject('name', variables('subnets')[copyIndex('value')].name, 'addressPrefix', variables('subnets')[copyIndex('value')].addressPrefix, 'delegations', variables('subnets')[copyIndex('value')].delegations, 'routeTableId', if(equals(variables('subnets')[copyIndex('value')].name, 'appgw-subnet'), null(), reference(resourceId('Microsoft.Resources/deployments', 'rt-deployment'), '2022-09-01').outputs.routeTableId.value))]"
              }
            ]
          },
          "nsgIds": {
            "value": [
              "[reference(resourceId('Microsoft.Resources/deployments', 'nsg-deployment'), '2022-09-01').outputs.nsgId.value]",
              "[reference(resourceId('Microsoft.Resources/deployments', 'nsg-deployment'), '2022-09-01').outputs.nsgId.value]",
              "[reference(resourceId('Microsoft.Resources/deployments', 'nsg-deployment'), '2022-09-01').outputs.nsgId.value]"
            ]
          }
        },
        "template": {
          "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
          "contentVersion": "1.0.0.0",
          "metadata": {
            "_generator": {
              "name": "bicep",
              "version": "0.31.92.45157",
              "templateHash": "10226440070690503597"
            }
          },
          "parameters": {
            "name": {
              "type": "string",
              "metadata": {
                "description": "Name of the Virtual Network"
              }
            },
            "location": {
              "type": "string",
              "metadata": {
                "description": "Location for resources"
              }
            },
            "addressPrefix": {
              "type": "string",
              "metadata": {
                "description": "Address prefix for the Virtual Network"
              }
            },
            "subnets": {
              "type": "array",
              "metadata": {
                "description": "Subnets configuration"
              }
            },
            "nsgIds": {
              "type": "array",
              "metadata": {
                "description": "Network Security Group IDs"
              }
            },
            "tags": {
              "type": "object",
              "defaultValue": {},
              "metadata": {
                "description": "Tags for the resources"
              }
            }
          },
          "resources": [
            {
              "type": "Microsoft.Network/virtualNetworks",
              "apiVersion": "2021-02-01",
              "name": "[parameters('name')]",
              "location": "[parameters('location')]",
              "tags": "[parameters('tags')]",
              "properties": {
                "copy": [
                  {
                    "name": "subnets",
                    "count": "[length(parameters('subnets'))]",
                    "input": {
                      "name": "[parameters('subnets')[copyIndex('subnets')].name]",
                      "properties": {
                        "addressPrefix": "[parameters('subnets')[copyIndex('subnets')].addressPrefix]",
                        "networkSecurityGroup": {
                          "id": "[parameters('nsgIds')[copyIndex('subnets')]]"
                        },
                        "routeTable": "[if(not(equals(parameters('subnets')[copyIndex('subnets')].routeTableId, null())), createObject('id', parameters('subnets')[copyIndex('subnets')].routeTableId), null())]",
                        "delegations": "[parameters('subnets')[copyIndex('subnets')].delegations]"
                      }
                    }
                  }
                ],
                "addressSpace": {
                  "addressPrefixes": [
                    "[parameters('addressPrefix')]"
                  ]
                }
              }
            }
          ],
          "outputs": {
            "virtualNetworkId": {
              "type": "string",
              "value": "[resourceId('Microsoft.Network/virtualNetworks', parameters('name'))]"
            },
            "subnetIds": {
              "type": "array",
              "copy": {
                "count": "[length(parameters('subnets'))]",
                "input": {
                  "name": "[parameters('subnets')[copyIndex()].name]",
                  "id": "[resourceId('Microsoft.Network/virtualNetworks/subnets', parameters('name'), parameters('subnets')[copyIndex()].name)]"
                }
              }
            }
          }
        }
      },
      "dependsOn": [
        "[resourceId('Microsoft.Resources/deployments', 'nsg-deployment')]",
        "[resourceId('Microsoft.Resources/deployments', 'rt-deployment')]"
      ]
    },
    {
      "type": "Microsoft.Resources/deployments",
      "apiVersion": "2022-09-01",
      "name": "appservice-deployment",
      "properties": {
        "expressionEvaluationOptions": {
          "scope": "inner"
        },
        "mode": "Incremental",
        "parameters": {
          "name": {
            "value": "[format('{0}-app', parameters('prefix'))]"
          },
          "location": {
            "value": "[resourceGroup().location]"
          },
          "tags": {
            "value": "[parameters('tags')]"
          },
          "sku": {
            "value": "[parameters('appServiceSku')]"
          },
          "language": {
            "value": "[parameters('language')]"
          },
          "netFrameworkVersion": {
            "value": "[parameters('netFrameworkVersion')]"
          },
          "windowsDotnetVersion": {
            "value": "[parameters('windowsDotnetVersion')]"
          },
          "subnetId": {
            "value": "[reference(resourceId('Microsoft.Resources/deployments', 'vnet-deployment'), '2022-09-01').outputs.subnetIds.value[2].id]"
          },
          "publicNetworkAccess": {
            "value": "[parameters('publicNetworkAccess')]"
          }
        },
        "template": {
          "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
          "contentVersion": "1.0.0.0",
          "metadata": {
            "_generator": {
              "name": "bicep",
              "version": "0.31.92.45157",
              "templateHash": "14655041222989797059"
            }
          },
          "parameters": {
            "name": {
              "type": "string",
              "minLength": 2,
              "metadata": {
                "description": "Web app name"
              }
            },
            "location": {
              "type": "string",
              "defaultValue": "[resourceGroup().location]",
              "metadata": {
                "description": "Location for all resources"
              }
            },
            "sku": {
              "type": "string",
              "defaultValue": "P1",
              "allowedValues": [
                "F1",
                "D1",
                "B1",
                "B2",
                "B3",
                "S1",
                "S2",
                "S3",
                "P1",
                "P2",
                "P3",
                "P4"
              ],
              "metadata": {
                "description": "App Service Plan SKU"
              }
            },
            "language": {
              "type": "string",
              "defaultValue": ".net",
              "allowedValues": [
                ".net",
                "php",
                "node",
                "html"
              ],
              "metadata": {
                "description": "The runtime stack of the app"
              }
            },
            "netFrameworkVersion": {
              "type": "string",
              "defaultValue": "v9.0",
              "allowedValues": [
                "v4.0",
                "v6.0",
                "v7.0",
                "v8.0",
                "v9.0"
              ],
              "metadata": {
                "description": "Runtime stack of the web app"
              }
            },
            "windowsDotnetVersion": {
              "type": "string",
              "defaultValue": "DOTNET|9.0-STS",
              "allowedValues": [
                "DOTNET|6.0",
                "DOTNET|7.0",
                "DOTNET|8.0",
                "DOTNET|9.0-STS"
              ],
              "metadata": {
                "description": "Windows .NET runtime version"
              }
            },
            "subnetId": {
              "type": "string",
              "metadata": {
                "description": "Subnet ID for VNet integration"
              }
            },
            "publicNetworkAccess": {
              "type": "string",
              "defaultValue": "Disabled",
              "allowedValues": [
                "Enabled",
                "Disabled"
              ],
              "metadata": {
                "description": "Enable public network access"
              }
            },
            "tags": {
              "type": "object",
              "defaultValue": {},
              "metadata": {
                "description": "Tags for the resources"
              }
            }
          },
          "variables": {
            "appServicePlanName": "[format('AppServicePlan-{0}', parameters('name'))]",
            "configReference": {
              ".net": {
                "comments": ".Net app. No additional configuration needed.",
                "netFrameworkVersion": "[parameters('netFrameworkVersion')]",
                "windowsFxVersion": "[parameters('windowsDotnetVersion')]"
              },
              "html": {
                "comments": "HTML app. No additional configuration needed."
              },
              "php": {
                "phpVersion": "7.4"
              },
              "node": {
                "appSettings": [
                  {
                    "name": "WEBSITE_NODE_DEFAULT_VERSION",
                    "value": "12.15.0"
                  }
                ]
              }
            }
          },
          "resources": [
            {
              "type": "Microsoft.Web/serverfarms",
              "apiVersion": "2022-03-01",
              "name": "[variables('appServicePlanName')]",
              "location": "[parameters('location')]",
              "tags": "[parameters('tags')]",
              "sku": {
                "name": "[parameters('sku')]"
              }
            },
            {
              "type": "Microsoft.Web/sites",
              "apiVersion": "2022-03-01",
              "name": "[parameters('name')]",
              "location": "[parameters('location')]",
              "tags": "[parameters('tags')]",
              "identity": {
                "type": "SystemAssigned"
              },
              "properties": {
                "siteConfig": "[union(variables('configReference')[parameters('language')], createObject('minTlsVersion', '1.2', 'scmMinTlsVersion', '1.2', 'ftpsState', 'FtpsOnly', 'alwaysOn', true(), 'http20Enabled', true(), 'use32BitWorkerProcess', false(), 'vnetRouteAllEnabled', true()))]",
                "serverFarmId": "[resourceId('Microsoft.Web/serverfarms', variables('appServicePlanName'))]",
                "httpsOnly": true,
                "publicNetworkAccess": "[parameters('publicNetworkAccess')]",
                "virtualNetworkSubnetId": "[parameters('subnetId')]"
              },
              "dependsOn": [
                "[resourceId('Microsoft.Web/serverfarms', variables('appServicePlanName'))]"
              ]
            },
            {
              "type": "Microsoft.Web/sites/networkConfig",
              "apiVersion": "2022-03-01",
              "name": "[format('{0}/{1}', parameters('name'), 'virtualNetwork')]",
              "properties": {
                "subnetResourceId": "[parameters('subnetId')]",
                "swiftSupported": true
              },
              "dependsOn": [
                "[resourceId('Microsoft.Web/sites', parameters('name'))]"
              ]
            }
          ],
          "outputs": {
            "appServiceId": {
              "type": "string",
              "value": "[resourceId('Microsoft.Web/sites', parameters('name'))]"
            },
            "appServiceName": {
              "type": "string",
              "value": "[parameters('name')]"
            },
            "appServicePlanId": {
              "type": "string",
              "value": "[resourceId('Microsoft.Web/serverfarms', variables('appServicePlanName'))]"
            }
          }
        }
      },
      "dependsOn": [
        "[resourceId('Microsoft.Resources/deployments', 'vnet-deployment')]"
      ]
    },
    {
      "type": "Microsoft.Resources/deployments",
      "apiVersion": "2022-09-01",
      "name": "sql-deployment",
      "properties": {
        "expressionEvaluationOptions": {
          "scope": "inner"
        },
        "mode": "Incremental",
        "parameters": {
          "serverName": {
            "value": "[format('{0}-sql', parameters('prefix'))]"
          },
          "databaseName": {
            "value": "[format('{0}-db', parameters('prefix'))]"
          },
          "location": {
            "value": "[resourceGroup().location]"
          },
          "tags": {
            "value": "[parameters('tags')]"
          },
          "skuName": {
            "value": "Basic"
          },
          "tier": {
            "value": "Basic"
          },
          "allowAzureIPs": {
            "value": false
          },
          "publicNetworkAccess": {
            "value": "[parameters('publicNetworkAccess')]"
          },
          "sqlAdminGroupObjectId": {
            "value": "[parameters('sqlAdminGroupObjectId')]"
          },
          "sqlAdminGroupName": {
            "value": "[parameters('sqlAdminGroupName')]"
          }
        },
        "template": {
          "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
          "contentVersion": "1.0.0.0",
          "metadata": {
            "_generator": {
              "name": "bicep",
              "version": "0.31.92.45157",
              "templateHash": "6603438227200403181"
            }
          },
          "parameters": {
            "serverName": {
              "type": "string",
              "metadata": {
                "description": "Name of the Azure SQL Server"
              }
            },
            "databaseName": {
              "type": "string",
              "metadata": {
                "description": "Name of the Azure SQL Database"
              }
            },
            "location": {
              "type": "string",
              "metadata": {
                "description": "Location for resources"
              }
            },
            "skuName": {
              "type": "string",
              "defaultValue": "Basic",
              "metadata": {
                "description": "Database SKU name"
              }
            },
            "tier": {
              "type": "string",
              "defaultValue": "Basic",
              "metadata": {
                "description": "Database tier"
              }
            },
            "allowAzureIPs": {
              "type": "bool",
              "defaultValue": true,
              "metadata": {
                "description": "Allow Azure services to access server"
              }
            },
            "tags": {
              "type": "object",
              "defaultValue": {},
              "metadata": {
                "description": "Tags for the resources"
              }
            },
            "publicNetworkAccess": {
              "type": "string",
              "defaultValue": "Disabled",
              "allowedValues": [
                "Enabled",
                "Disabled"
              ],
              "metadata": {
                "description": "Enable public network access"
              }
            },
            "sqlAdminGroupObjectId": {
              "type": "string",
              "metadata": {
                "description": "Object ID of the Azure Entra group for SQL administrators"
              }
            },
            "sqlAdminGroupName": {
              "type": "string",
              "defaultValue": "SQL Administrators",
              "metadata": {
                "description": "Display name of the Azure Entra group for SQL administrators"
              }
            }
          },
          "resources": [
            {
              "type": "Microsoft.Sql/servers",
              "apiVersion": "2021-11-01",
              "name": "[parameters('serverName')]",
              "location": "[parameters('location')]",
              "tags": "[parameters('tags')]",
              "properties": {
                "version": "12.0",
                "publicNetworkAccess": "[parameters('publicNetworkAccess')]",
                "minimalTlsVersion": "1.2",
                "restrictOutboundNetworkAccess": "Enabled",
                "administrators": {
                  "administratorType": "ActiveDirectory",
                  "principalType": "Group",
                  "login": "[parameters('sqlAdminGroupName')]",
                  "sid": "[parameters('sqlAdminGroupObjectId')]",
                  "tenantId": "[subscription().tenantId]",
                  "azureADOnlyAuthentication": true
                }
              }
            },
            {
              "type": "Microsoft.Sql/servers/databases",
              "apiVersion": "2021-11-01",
              "name": "[format('{0}/{1}', parameters('serverName'), parameters('databaseName'))]",
              "location": "[parameters('location')]",
              "tags": "[parameters('tags')]",
              "sku": {
                "name": "[parameters('skuName')]",
                "tier": "[parameters('tier')]"
              },
              "dependsOn": [
                "[resourceId('Microsoft.Sql/servers', parameters('serverName'))]"
              ]
            },
            {
              "condition": "[parameters('allowAzureIPs')]",
              "type": "Microsoft.Sql/servers/firewallRules",
              "apiVersion": "2021-11-01",
              "name": "[format('{0}/{1}', parameters('serverName'), 'AllowAllWindowsAzureIps')]",
              "properties": {
                "startIpAddress": "0.0.0.0",
                "endIpAddress": "0.0.0.0"
              },
              "dependsOn": [
                "[resourceId('Microsoft.Sql/servers', parameters('serverName'))]"
              ]
            }
          ],
          "outputs": {
            "serverId": {
              "type": "string",
              "value": "[resourceId('Microsoft.Sql/servers', parameters('serverName'))]"
            },
            "serverName": {
              "type": "string",
              "value": "[parameters('serverName')]"
            },
            "databaseName": {
              "type": "string",
              "value": "[parameters('databaseName')]"
            },
            "serverFqdn": {
              "type": "string",
              "value": "[reference(resourceId('Microsoft.Sql/servers', parameters('serverName')), '2021-11-01').fullyQualifiedDomainName]"
            }
          }
        }
      },
      "dependsOn": [
        "[resourceId('Microsoft.Resources/deployments', 'vnet-deployment')]"
      ]
    },
    {
      "condition": "[equals(parameters('publicNetworkAccess'), 'Disabled')]",
      "type": "Microsoft.Resources/deployments",
      "apiVersion": "2022-09-01",
      "name": "sql-pe-deployment",
      "properties": {
        "expressionEvaluationOptions": {
          "scope": "inner"
        },
        "mode": "Incremental",
        "parameters": {
          "name": {
            "value": "[format('{0}-sql-pe', parameters('prefix'))]"
          },
          "location": {
            "value": "[resourceGroup().location]"
          },
          "subnetId": {
            "value": "[reference(resourceId('Microsoft.Resources/deployments', 'vnet-deployment'), '2022-09-01').outputs.subnetIds.value[1].id]"
          },
          "privateConnectResourceId": {
            "value": "[reference(resourceId('Microsoft.Resources/deployments', 'sql-deployment'), '2022-09-01').outputs.serverId.value]"
          },
          "groupId": {
            "value": "sqlServer"
          },
          "asgIds": {
            "value": [
              "[reference(resourceId('Microsoft.Resources/deployments', format('asg-{0}', variables('asgNames')[1])), '2022-09-01').outputs.asgId.value]"
            ]
          }
        },
        "template": {
          "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
          "contentVersion": "1.0.0.0",
          "metadata": {
            "_generator": {
              "name": "bicep",
              "version": "0.31.92.45157",
              "templateHash": "8637885887530619838"
            }
          },
          "parameters": {
            "name": {
              "type": "string",
              "metadata": {
                "description": "Name of the Private Endpoint"
              }
            },
            "location": {
              "type": "string",
              "metadata": {
                "description": "Location for resources"
              }
            },
            "subnetId": {
              "type": "string",
              "metadata": {
                "description": "Resource ID of the subnet where the private endpoint will be created"
              }
            },
            "privateConnectResourceId": {
              "type": "string",
              "metadata": {
                "description": "Resource ID of the resource to connect to"
              }
            },
            "groupId": {
              "type": "string",
              "allowedValues": [
                "sites",
                "sites-staging",
                "sqlServer",
                "blob",
                "file",
                "queue",
                "table",
                "registry",
                "vault"
              ],
              "metadata": {
                "description": "Group ID of the private link service"
              }
            },
            "privateDnsZoneIds": {
              "type": "array",
              "defaultValue": [],
              "metadata": {
                "description": "Array of private DNS zone resource IDs"
              }
            },
            "asgIds": {
              "type": "array",
              "defaultValue": [],
              "metadata": {
                "description": "Application Security Group IDs to associate with the private endpoint"
              }
            }
          },
          "resources": [
            {
              "type": "Microsoft.Network/privateEndpoints",
              "apiVersion": "2023-04-01",
              "name": "[parameters('name')]",
              "location": "[parameters('location')]",
              "properties": {
                "copy": [
                  {
                    "name": "applicationSecurityGroups",
                    "count": "[length(parameters('asgIds'))]",
                    "input": {
                      "id": "[parameters('asgIds')[copyIndex('applicationSecurityGroups')]]"
                    }
                  }
                ],
                "subnet": {
                  "id": "[parameters('subnetId')]"
                },
                "privateLinkServiceConnections": [
                  {
                    "name": "[format('{0}-connection', parameters('name'))]",
                    "properties": {
                      "privateLinkServiceId": "[parameters('privateConnectResourceId')]",
                      "groupIds": [
                        "[parameters('groupId')]"
                      ]
                    }
                  }
                ]
              }
            },
            {
              "condition": "[not(empty(parameters('privateDnsZoneIds')))]",
              "type": "Microsoft.Network/privateEndpoints/privateDnsZoneGroups",
              "apiVersion": "2023-04-01",
              "name": "[format('{0}/{1}', parameters('name'), 'default')]",
              "properties": {
                "copy": [
                  {
                    "name": "privateDnsZoneConfigs",
                    "count": "[length(parameters('privateDnsZoneIds'))]",
                    "input": {
                      "name": "[format('config{0}', add(copyIndex('privateDnsZoneConfigs'), 1))]",
                      "properties": {
                        "privateDnsZoneId": "[parameters('privateDnsZoneIds')[copyIndex('privateDnsZoneConfigs')]]"
                      }
                    }
                  }
                ]
              },
              "dependsOn": [
                "[resourceId('Microsoft.Network/privateEndpoints', parameters('name'))]"
              ]
            }
          ],
          "outputs": {
            "privateEndpointId": {
              "type": "string",
              "value": "[resourceId('Microsoft.Network/privateEndpoints', parameters('name'))]"
            },
            "privateEndpointIp": {
              "type": "string",
              "value": "[reference(resourceId('Microsoft.Network/privateEndpoints', parameters('name')), '2023-04-01').customDnsConfigs[0].ipAddresses[0]]"
            }
          }
        }
      },
      "dependsOn": [
        "[resourceId('Microsoft.Resources/deployments', format('asg-{0}', variables('asgNames')[1]))]",
        "[resourceId('Microsoft.Resources/deployments', 'sql-deployment')]",
        "[resourceId('Microsoft.Resources/deployments', 'vnet-deployment')]"
      ]
    },
    {
      "type": "Microsoft.Resources/deployments",
      "apiVersion": "2022-09-01",
      "name": "app-pe-deployment",
      "properties": {
        "expressionEvaluationOptions": {
          "scope": "inner"
        },
        "mode": "Incremental",
        "parameters": {
          "name": {
            "value": "[format('{0}-app-pe', parameters('prefix'))]"
          },
          "location": {
            "value": "[resourceGroup().location]"
          },
          "subnetId": {
            "value": "[reference(resourceId('Microsoft.Resources/deployments', 'vnet-deployment'), '2022-09-01').outputs.subnetIds.value[1].id]"
          },
          "privateConnectResourceId": {
            "value": "[reference(resourceId('Microsoft.Resources/deployments', 'appservice-deployment'), '2022-09-01').outputs.appServiceId.value]"
          },
          "groupId": {
            "value": "sites"
          },
          "asgIds": {
            "value": [
              "[reference(resourceId('Microsoft.Resources/deployments', format('asg-{0}', variables('asgNames')[1])), '2022-09-01').outputs.asgId.value]"
            ]
          }
        },
        "template": {
          "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
          "contentVersion": "1.0.0.0",
          "metadata": {
            "_generator": {
              "name": "bicep",
              "version": "0.31.92.45157",
              "templateHash": "8637885887530619838"
            }
          },
          "parameters": {
            "name": {
              "type": "string",
              "metadata": {
                "description": "Name of the Private Endpoint"
              }
            },
            "location": {
              "type": "string",
              "metadata": {
                "description": "Location for resources"
              }
            },
            "subnetId": {
              "type": "string",
              "metadata": {
                "description": "Resource ID of the subnet where the private endpoint will be created"
              }
            },
            "privateConnectResourceId": {
              "type": "string",
              "metadata": {
                "description": "Resource ID of the resource to connect to"
              }
            },
            "groupId": {
              "type": "string",
              "allowedValues": [
                "sites",
                "sites-staging",
                "sqlServer",
                "blob",
                "file",
                "queue",
                "table",
                "registry",
                "vault"
              ],
              "metadata": {
                "description": "Group ID of the private link service"
              }
            },
            "privateDnsZoneIds": {
              "type": "array",
              "defaultValue": [],
              "metadata": {
                "description": "Array of private DNS zone resource IDs"
              }
            },
            "asgIds": {
              "type": "array",
              "defaultValue": [],
              "metadata": {
                "description": "Application Security Group IDs to associate with the private endpoint"
              }
            }
          },
          "resources": [
            {
              "type": "Microsoft.Network/privateEndpoints",
              "apiVersion": "2023-04-01",
              "name": "[parameters('name')]",
              "location": "[parameters('location')]",
              "properties": {
                "copy": [
                  {
                    "name": "applicationSecurityGroups",
                    "count": "[length(parameters('asgIds'))]",
                    "input": {
                      "id": "[parameters('asgIds')[copyIndex('applicationSecurityGroups')]]"
                    }
                  }
                ],
                "subnet": {
                  "id": "[parameters('subnetId')]"
                },
                "privateLinkServiceConnections": [
                  {
                    "name": "[format('{0}-connection', parameters('name'))]",
                    "properties": {
                      "privateLinkServiceId": "[parameters('privateConnectResourceId')]",
                      "groupIds": [
                        "[parameters('groupId')]"
                      ]
                    }
                  }
                ]
              }
            },
            {
              "condition": "[not(empty(parameters('privateDnsZoneIds')))]",
              "type": "Microsoft.Network/privateEndpoints/privateDnsZoneGroups",
              "apiVersion": "2023-04-01",
              "name": "[format('{0}/{1}', parameters('name'), 'default')]",
              "properties": {
                "copy": [
                  {
                    "name": "privateDnsZoneConfigs",
                    "count": "[length(parameters('privateDnsZoneIds'))]",
                    "input": {
                      "name": "[format('config{0}', add(copyIndex('privateDnsZoneConfigs'), 1))]",
                      "properties": {
                        "privateDnsZoneId": "[parameters('privateDnsZoneIds')[copyIndex('privateDnsZoneConfigs')]]"
                      }
                    }
                  }
                ]
              },
              "dependsOn": [
                "[resourceId('Microsoft.Network/privateEndpoints', parameters('name'))]"
              ]
            }
          ],
          "outputs": {
            "privateEndpointId": {
              "type": "string",
              "value": "[resourceId('Microsoft.Network/privateEndpoints', parameters('name'))]"
            },
            "privateEndpointIp": {
              "type": "string",
              "value": "[reference(resourceId('Microsoft.Network/privateEndpoints', parameters('name')), '2023-04-01').customDnsConfigs[0].ipAddresses[0]]"
            }
          }
        }
      },
      "dependsOn": [
        "[resourceId('Microsoft.Resources/deployments', 'appservice-deployment')]",
        "[resourceId('Microsoft.Resources/deployments', format('asg-{0}', variables('asgNames')[1]))]",
        "[resourceId('Microsoft.Resources/deployments', 'vnet-deployment')]"
      ]
    },
    {
      "type": "Microsoft.Resources/deployments",
      "apiVersion": "2022-09-01",
      "name": "appgw-pip-deployment",
      "properties": {
        "expressionEvaluationOptions": {
          "scope": "inner"
        },
        "mode": "Incremental",
        "parameters": {
          "name": {
            "value": "[format('{0}-appgw-pip', parameters('prefix'))]"
          },
          "location": {
            "value": "[resourceGroup().location]"
          },
          "tags": {
            "value": "[parameters('tags')]"
          }
        },
        "template": {
          "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
          "contentVersion": "1.0.0.0",
          "metadata": {
            "_generator": {
              "name": "bicep",
              "version": "0.31.92.45157",
              "templateHash": "11348382277278120373"
            }
          },
          "parameters": {
            "name": {
              "type": "string",
              "metadata": {
                "description": "Name of the Public IP"
              }
            },
            "location": {
              "type": "string",
              "metadata": {
                "description": "Location for resources"
              }
            },
            "tags": {
              "type": "object",
              "defaultValue": {},
              "metadata": {
                "description": "Tags for the resources"
              }
            },
            "zones": {
              "type": "array",
              "defaultValue": [],
              "metadata": {
                "description": "Availability zones to use for the public IP. Use empty array for no zones."
              }
            }
          },
          "resources": [
            {
              "type": "Microsoft.Network/publicIPAddresses",
              "apiVersion": "2020-11-01",
              "name": "[parameters('name')]",
              "location": "[parameters('location')]",
              "tags": "[parameters('tags')]",
              "sku": {
                "name": "Standard"
              },
              "zones": "[if(not(empty(parameters('zones'))), parameters('zones'), null())]",
              "properties": {
                "publicIPAllocationMethod": "Static"
              }
            }
          ],
          "outputs": {
            "publicIpId": {
              "type": "string",
              "value": "[resourceId('Microsoft.Network/publicIPAddresses', parameters('name'))]"
            },
            "publicIpName": {
              "type": "string",
              "value": "[parameters('name')]"
            }
          }
        }
      }
    },
    {
      "type": "Microsoft.Resources/deployments",
      "apiVersion": "2022-09-01",
      "name": "appgw-deployment",
      "properties": {
        "expressionEvaluationOptions": {
          "scope": "inner"
        },
        "mode": "Incremental",
        "parameters": {
          "appgwName": {
            "value": "[format('{0}-appgw', parameters('prefix'))]"
          },
          "location": {
            "value": "[resourceGroup().location]"
          },
          "tags": {
            "value": "[parameters('tags')]"
          },
          "subnetId": {
            "value": "[reference(resourceId('Microsoft.Resources/deployments', 'vnet-deployment'), '2022-09-01').outputs.subnetIds.value[0].id]"
          },
          "publicIpName": {
            "value": "appgw-pip-deployment"
          },
          "backendPools": {
            "value": [
              {
                "name": "app-backend",
                "properties": {
                  "backendAddresses": [
                    {
                      "fqdn": "[format('{0}.azurewebsites.net', reference(resourceId('Microsoft.Resources/deployments', 'appservice-deployment'), '2022-09-01').outputs.appServiceName.value)]"
                    }
                  ]
                }
              }
            ]
          },
          "skuName": {
            "value": "Standard_v2"
          },
          "skuTier": {
            "value": "Standard_v2"
          },
          "capacity": {
            "value": 2
          },
          "constructPublicFrontendIpConfig": {
            "value": true
          },
          "constructPrivateFrontendIpConfig": {
            "value": false
          },
          "frontendPorts": {
            "value": [
              {
                "name": "port_80",
                "properties": {
                  "port": 80
                }
              }
            ]
          },
          "httpSettings": {
            "value": [
              {
                "name": "appServiceHttpSetting",
                "properties": {
                  "port": 80,
                  "protocol": "Http",
                  "cookieBasedAffinity": "Disabled",
                  "pickHostNameFromBackendAddress": true,
                  "requestTimeout": 20
                }
              }
            ]
          },
          "listeners": {
            "value": [
              {
                "name": "httpsListener",
                "frontendIPConfiguration": "appGwPublicFrontendIp",
                "frontendPort": "port_80",
                "protocol": "Http",
                "requireServerNameIndication": false
              }
            ]
          },
          "routingRules": {
            "value": [
              {
                "name": "appServiceRule",
                "ruleType": "Basic",
                "httpListener": "httpsListener",
                "backendAddressPool": "app-backend",
                "backendHttpSettings": "appServiceHttpSetting",
                "priority": 100
              }
            ]
          }
        },
        "template": {
          "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
          "contentVersion": "1.0.0.0",
          "metadata": {
            "_generator": {
              "name": "bicep",
              "version": "0.31.92.45157",
              "templateHash": "5254476913586697311"
            }
          },
          "parameters": {
            "appgwName": {
              "type": "string",
              "defaultValue": "",
              "metadata": {
                "description": "Application Gateway name."
              }
            },
            "location": {
              "type": "string",
              "metadata": {
                "description": "Location for resources"
              }
            },
            "subnetId": {
              "type": "string",
              "metadata": {
                "description": "ID of the subnet for the Application Gateway"
              }
            },
            "skuName": {
              "type": "string",
              "defaultValue": "Standard_v2",
              "allowedValues": [
                "Standard_v2",
                "WAF_v2"
              ],
              "metadata": {
                "description": "SKU Name for the Application Gateway"
              }
            },
            "skuTier": {
              "type": "string",
              "defaultValue": "Standard_v2",
              "allowedValues": [
                "Standard_v2",
                "WAF_v2"
              ],
              "metadata": {
                "description": "SKU Tier for the Application Gateway"
              }
            },
            "capacity": {
              "type": "int",
              "defaultValue": 2,
              "metadata": {
                "description": "Capacity for the Application Gateway"
              }
            },
            "httpSettings": {
              "type": "array",
              "defaultValue": [],
              "metadata": {
                "description": "Array of HTTP Settings for Application Gateway"
              }
            },
            "listeners": {
              "type": "array",
              "defaultValue": [],
              "metadata": {
                "description": "Array of Listeners for Application Gateway"
              }
            },
            "routingRules": {
              "type": "array",
              "defaultValue": [],
              "metadata": {
                "description": "Array of Routing Rules for Application Gateway"
              }
            },
            "probes": {
              "type": "array",
              "defaultValue": [],
              "metadata": {
                "description": "Array of Probes for Application Gateway"
              }
            },
            "frontendPorts": {
              "type": "array",
              "defaultValue": [],
              "metadata": {
                "description": "Array of Frontend Ports for Application Gateway"
              }
            },
            "constructPublicFrontendIpConfig": {
              "type": "bool",
              "metadata": {
                "description": "Boolean indicating whether to construct a public frontend IP configuration"
              }
            },
            "constructPrivateFrontendIpConfig": {
              "type": "bool",
              "metadata": {
                "description": "Boolean indicating whether to construct a private frontend IP configuration"
              }
            },
            "publicIpName": {
              "type": "string",
              "metadata": {
                "description": "Public IP name for Application Gateway"
              }
            },
            "backendPools": {
              "type": "array",
              "defaultValue": [],
              "metadata": {
                "description": "Array of Backend Pools for Application Gateway"
              }
            },
            "tags": {
              "type": "object",
              "defaultValue": {},
              "metadata": {
                "description": "Tags for the resources"
              }
            }
          },
          "resources": [
            {
              "condition": "[or(parameters('constructPublicFrontendIpConfig'), parameters('constructPrivateFrontendIpConfig'))]",
              "type": "Microsoft.Network/applicationGateways",
              "apiVersion": "2023-11-01",
              "name": "[parameters('appgwName')]",
              "location": "[parameters('location')]",
              "tags": "[parameters('tags')]",
              "properties": {
                "copy": [
                  {
                    "name": "backendAddressPools",
                    "count": "[length(parameters('backendPools'))]",
                    "input": {
                      "name": "[parameters('backendPools')[copyIndex('backendAddressPools')].name]",
                      "properties": {}
                    }
                  },
                  {
                    "name": "httpListeners",
                    "count": "[length(parameters('listeners'))]",
                    "input": {
                      "name": "[parameters('listeners')[copyIndex('httpListeners')].name]",
                      "properties": {
                        "frontendIPConfiguration": {
                          "id": "[resourceId('Microsoft.Network/applicationGateways/frontendIPConfigurations', parameters('appgwName'), parameters('listeners')[copyIndex('httpListeners')].frontendIPConfiguration)]"
                        },
                        "frontendPort": {
                          "id": "[resourceId('Microsoft.Network/applicationGateways/frontendPorts', parameters('appgwName'), parameters('listeners')[copyIndex('httpListeners')].frontendPort)]"
                        },
                        "protocol": "[parameters('listeners')[copyIndex('httpListeners')].protocol]",
                        "requireServerNameIndication": "[parameters('listeners')[copyIndex('httpListeners')].requireServerNameIndication]",
                        "hostName": "[tryGet(parameters('listeners')[copyIndex('httpListeners')], 'hostName')]"
                      }
                    }
                  },
                  {
                    "name": "requestRoutingRules",
                    "count": "[length(parameters('routingRules'))]",
                    "input": {
                      "name": "[parameters('routingRules')[copyIndex('requestRoutingRules')].name]",
                      "properties": {
                        "ruleType": "[parameters('routingRules')[copyIndex('requestRoutingRules')].ruleType]",
                        "httpListener": {
                          "id": "[resourceId('Microsoft.Network/applicationGateways/httpListeners', parameters('appgwName'), parameters('routingRules')[copyIndex('requestRoutingRules')].httpListener)]"
                        },
                        "backendAddressPool": {
                          "id": "[resourceId('Microsoft.Network/applicationGateways/backendAddressPools', parameters('appgwName'), parameters('routingRules')[copyIndex('requestRoutingRules')].backendAddressPool)]"
                        },
                        "backendHttpSettings": {
                          "id": "[resourceId('Microsoft.Network/applicationGateways/backendHttpSettingsCollection', parameters('appgwName'), parameters('routingRules')[copyIndex('requestRoutingRules')].backendHttpSettings)]"
                        },
                        "priority": "[parameters('routingRules')[copyIndex('requestRoutingRules')].priority]"
                      }
                    }
                  }
                ],
                "sku": {
                  "name": "[parameters('skuName')]",
                  "tier": "[parameters('skuTier')]",
                  "capacity": "[parameters('capacity')]"
                },
                "gatewayIPConfigurations": [
                  {
                    "name": "appGatewayIpConfig",
                    "properties": {
                      "subnet": {
                        "id": "[parameters('subnetId')]"
                      }
                    }
                  }
                ],
                "frontendIPConfigurations": "[concat(if(parameters('constructPublicFrontendIpConfig'), createArray(createObject('name', 'appGwPublicFrontendIp', 'properties', createObject('publicIPAddress', createObject('id', resourceId('Microsoft.Network/publicIPAddresses', parameters('publicIpName')))))), createArray()), if(parameters('constructPrivateFrontendIpConfig'), createArray(createObject('name', 'appGwPrivateFrontendIp', 'properties', createObject('privateIPAllocationMethod', 'Dynamic', 'subnet', createObject('id', parameters('subnetId'))))), createArray()))]",
                "frontendPorts": "[parameters('frontendPorts')]",
                "backendHttpSettingsCollection": "[parameters('httpSettings')]",
                "probes": "[parameters('probes')]",
                "enableHttp2": false
              }
            }
          ],
          "outputs": {
            "applicationGatewayId": {
              "type": "string",
              "value": "[resourceId('Microsoft.Network/applicationGateways', parameters('appgwName'))]"
            }
          }
        }
      },
      "dependsOn": [
        "[resourceId('Microsoft.Resources/deployments', 'appgw-pip-deployment')]",
        "[resourceId('Microsoft.Resources/deployments', 'appservice-deployment')]",
        "[resourceId('Microsoft.Resources/deployments', 'vnet-deployment')]"
      ]
    },
    {
      "type": "Microsoft.Resources/deployments",
      "apiVersion": "2022-09-01",
      "name": "sql-backup-storage-deployment",
      "properties": {
        "expressionEvaluationOptions": {
          "scope": "inner"
        },
        "mode": "Incremental",
        "parameters": {
          "name": {
            "value": "[format('{0}sqlbackups{1}', parameters('prefix'), parameters('environment'))]"
          },
          "location": {
            "value": "[resourceGroup().location]"
          },
          "tags": {
            "value": "[parameters('tags')]"
          },
          "skuName": {
            "value": "Standard_LRS"
          },
          "kind": {
            "value": "StorageV2"
          },
          "enableBlobPublicAccess": {
            "value": false
          },
          "publicNetworkAccess": {
            "value": "[parameters('publicNetworkAccess')]"
          }
        },
        "template": {
          "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
          "contentVersion": "1.0.0.0",
          "metadata": {
            "_generator": {
              "name": "bicep",
              "version": "0.31.92.45157",
              "templateHash": "5341929043136592280"
            }
          },
          "parameters": {
            "name": {
              "type": "string",
              "metadata": {
                "description": "Name of the Storage Account"
              }
            },
            "location": {
              "type": "string",
              "metadata": {
                "description": "Location for resources"
              }
            },
            "skuName": {
              "type": "string",
              "allowedValues": [
                "Standard_LRS",
                "Standard_GRS",
                "Standard_RAGRS",
                "Standard_ZRS",
                "Premium_LRS"
              ],
              "metadata": {
                "description": "SKU for the Storage Account"
              }
            },
            "kind": {
              "type": "string",
              "allowedValues": [
                "Storage",
                "StorageV2",
                "BlobStorage",
                "FileStorage",
                "BlockBlobStorage"
              ],
              "metadata": {
                "description": "Kind of the Storage Account"
              }
            },
            "accessTier": {
              "type": "string",
              "defaultValue": "Hot",
              "allowedValues": [
                "Hot",
                "Cool"
              ],
              "metadata": {
                "description": "Access tier for the Storage Account"
              }
            },
            "enableBlobPublicAccess": {
              "type": "bool",
              "defaultValue": true,
              "metadata": {
                "description": "Enable blob public access"
              }
            },
            "publicNetworkAccess": {
              "type": "string",
              "defaultValue": "Disabled",
              "allowedValues": [
                "Enabled",
                "Disabled"
              ],
              "metadata": {
                "description": "Enable public network access"
              }
            },
            "tags": {
              "type": "object",
              "defaultValue": {},
              "metadata": {
                "description": "Tags for the resources"
              }
            }
          },
          "resources": [
            {
              "type": "Microsoft.Storage/storageAccounts",
              "apiVersion": "2023-01-01",
              "name": "[parameters('name')]",
              "location": "[parameters('location')]",
              "tags": "[parameters('tags')]",
              "sku": {
                "name": "[parameters('skuName')]"
              },
              "kind": "[parameters('kind')]",
              "properties": {
                "accessTier": "[parameters('accessTier')]",
                "allowBlobPublicAccess": "[parameters('enableBlobPublicAccess')]",
                "publicNetworkAccess": "[parameters('publicNetworkAccess')]",
                "networkAcls": {
                  "defaultAction": "[if(equals(parameters('publicNetworkAccess'), 'Enabled'), 'Allow', 'Deny')]",
                  "bypass": "None"
                },
                "supportsHttpsTrafficOnly": true,
                "minimumTlsVersion": "TLS1_2"
              }
            }
          ],
          "outputs": {
            "storageAccountId": {
              "type": "string",
              "value": "[resourceId('Microsoft.Storage/storageAccounts', parameters('name'))]"
            },
            "storageAccountName": {
              "type": "string",
              "value": "[parameters('name')]"
            }
          }
        }
      }
    },
    {
      "type": "Microsoft.Resources/deployments",
      "apiVersion": "2022-09-01",
      "name": "sql-backup-pe-deployment",
      "properties": {
        "expressionEvaluationOptions": {
          "scope": "inner"
        },
        "mode": "Incremental",
        "parameters": {
          "name": {
            "value": "[format('{0}-sqlbackup-pe', parameters('prefix'))]"
          },
          "location": {
            "value": "[resourceGroup().location]"
          },
          "subnetId": {
            "value": "[format('{0}/subnets/{1}', reference(resourceId('Microsoft.Resources/deployments', 'vnet-deployment'), '2022-09-01').outputs.virtualNetworkId.value, variables('subnets')[1].name)]"
          },
          "privateConnectResourceId": {
            "value": "[reference(resourceId('Microsoft.Resources/deployments', 'sql-backup-storage-deployment'), '2022-09-01').outputs.storageAccountId.value]"
          },
          "groupId": {
            "value": "blob"
          },
          "asgIds": {
            "value": [
              "[reference(resourceId('Microsoft.Resources/deployments', format('asg-{0}', variables('asgNames')[2])), '2022-09-01').outputs.asgId.value]"
            ]
          }
        },
        "template": {
          "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
          "contentVersion": "1.0.0.0",
          "metadata": {
            "_generator": {
              "name": "bicep",
              "version": "0.31.92.45157",
              "templateHash": "8637885887530619838"
            }
          },
          "parameters": {
            "name": {
              "type": "string",
              "metadata": {
                "description": "Name of the Private Endpoint"
              }
            },
            "location": {
              "type": "string",
              "metadata": {
                "description": "Location for resources"
              }
            },
            "subnetId": {
              "type": "string",
              "metadata": {
                "description": "Resource ID of the subnet where the private endpoint will be created"
              }
            },
            "privateConnectResourceId": {
              "type": "string",
              "metadata": {
                "description": "Resource ID of the resource to connect to"
              }
            },
            "groupId": {
              "type": "string",
              "allowedValues": [
                "sites",
                "sites-staging",
                "sqlServer",
                "blob",
                "file",
                "queue",
                "table",
                "registry",
                "vault"
              ],
              "metadata": {
                "description": "Group ID of the private link service"
              }
            },
            "privateDnsZoneIds": {
              "type": "array",
              "defaultValue": [],
              "metadata": {
                "description": "Array of private DNS zone resource IDs"
              }
            },
            "asgIds": {
              "type": "array",
              "defaultValue": [],
              "metadata": {
                "description": "Application Security Group IDs to associate with the private endpoint"
              }
            }
          },
          "resources": [
            {
              "type": "Microsoft.Network/privateEndpoints",
              "apiVersion": "2023-04-01",
              "name": "[parameters('name')]",
              "location": "[parameters('location')]",
              "properties": {
                "copy": [
                  {
                    "name": "applicationSecurityGroups",
                    "count": "[length(parameters('asgIds'))]",
                    "input": {
                      "id": "[parameters('asgIds')[copyIndex('applicationSecurityGroups')]]"
                    }
                  }
                ],
                "subnet": {
                  "id": "[parameters('subnetId')]"
                },
                "privateLinkServiceConnections": [
                  {
                    "name": "[format('{0}-connection', parameters('name'))]",
                    "properties": {
                      "privateLinkServiceId": "[parameters('privateConnectResourceId')]",
                      "groupIds": [
                        "[parameters('groupId')]"
                      ]
                    }
                  }
                ]
              }
            },
            {
              "condition": "[not(empty(parameters('privateDnsZoneIds')))]",
              "type": "Microsoft.Network/privateEndpoints/privateDnsZoneGroups",
              "apiVersion": "2023-04-01",
              "name": "[format('{0}/{1}', parameters('name'), 'default')]",
              "properties": {
                "copy": [
                  {
                    "name": "privateDnsZoneConfigs",
                    "count": "[length(parameters('privateDnsZoneIds'))]",
                    "input": {
                      "name": "[format('config{0}', add(copyIndex('privateDnsZoneConfigs'), 1))]",
                      "properties": {
                        "privateDnsZoneId": "[parameters('privateDnsZoneIds')[copyIndex('privateDnsZoneConfigs')]]"
                      }
                    }
                  }
                ]
              },
              "dependsOn": [
                "[resourceId('Microsoft.Network/privateEndpoints', parameters('name'))]"
              ]
            }
          ],
          "outputs": {
            "privateEndpointId": {
              "type": "string",
              "value": "[resourceId('Microsoft.Network/privateEndpoints', parameters('name'))]"
            },
            "privateEndpointIp": {
              "type": "string",
              "value": "[reference(resourceId('Microsoft.Network/privateEndpoints', parameters('name')), '2023-04-01').customDnsConfigs[0].ipAddresses[0]]"
            }
          }
        }
      },
      "dependsOn": [
        "[resourceId('Microsoft.Resources/deployments', format('asg-{0}', variables('asgNames')[2]))]",
        "[resourceId('Microsoft.Resources/deployments', 'sql-backup-storage-deployment')]",
        "[resourceId('Microsoft.Resources/deployments', 'vnet-deployment')]"
      ]
    }
  ],
  "outputs": {
    "vnetId": {
      "type": "string",
      "value": "[reference(resourceId('Microsoft.Resources/deployments', 'vnet-deployment'), '2022-09-01').outputs.virtualNetworkId.value]"
    },
    "appServiceUrl": {
      "type": "string",
      "value": "[reference(resourceId('Microsoft.Resources/deployments', 'appservice-deployment'), '2022-09-01').outputs.appServiceName.value]"
    },
    "sqlServerFqdn": {
      "type": "string",
      "value": "[reference(resourceId('Microsoft.Resources/deployments', 'sql-deployment'), '2022-09-01').outputs.serverFqdn.value]"
    }
  }
}